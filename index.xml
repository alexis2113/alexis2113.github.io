<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sniffle on Sniffle</title>
    <link>/</link>
    <description>Recent content in Sniffle on Sniffle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Feb 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Html</title>
      <link>/practice/html/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/practice/html/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/r2d3-render/r2d3-render.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/webcomponents/webcomponents.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/r2d3-binding/r2d3.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3v4/d3.min.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;r2d3 html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:{&#34;id&#34;:[&#34;flare&#34;,&#34;flare.analytics&#34;,&#34;flare.analytics.cluster&#34;,&#34;flare.analytics.cluster.AgglomerativeCluster&#34;,&#34;flare.analytics.cluster.CommunityStructure&#34;,&#34;flare.analytics.cluster.HierarchicalCluster&#34;,&#34;flare.analytics.cluster.MergeEdge&#34;,&#34;flare.analytics.graph&#34;,&#34;flare.analytics.graph.BetweennessCentrality&#34;,&#34;flare.analytics.graph.LinkDistance&#34;,&#34;flare.analytics.graph.MaxFlowMinCut&#34;,&#34;flare.analytics.graph.ShortestPaths&#34;,&#34;flare.analytics.graph.SpanningTree&#34;,&#34;flare.analytics.optimization&#34;,&#34;flare.analytics.optimization.AspectRatioBanker&#34;,&#34;flare.animate&#34;,&#34;flare.animate.Easing&#34;,&#34;flare.animate.FunctionSequence&#34;,&#34;flare.animate.interpolate&#34;,&#34;flare.animate.interpolate.ArrayInterpolator&#34;,&#34;flare.animate.interpolate.ColorInterpolator&#34;,&#34;flare.animate.interpolate.DateInterpolator&#34;,&#34;flare.animate.interpolate.Interpolator&#34;,&#34;flare.animate.interpolate.MatrixInterpolator&#34;,&#34;flare.animate.interpolate.NumberInterpolator&#34;,&#34;flare.animate.interpolate.ObjectInterpolator&#34;,&#34;flare.animate.interpolate.PointInterpolator&#34;,&#34;flare.animate.interpolate.RectangleInterpolator&#34;,&#34;flare.animate.ISchedulable&#34;,&#34;flare.animate.Parallel&#34;,&#34;flare.animate.Pause&#34;,&#34;flare.animate.Scheduler&#34;,&#34;flare.animate.Sequence&#34;,&#34;flare.animate.Transition&#34;,&#34;flare.animate.Transitioner&#34;,&#34;flare.animate.TransitionEvent&#34;,&#34;flare.animate.Tween&#34;,&#34;flare.data&#34;,&#34;flare.data.converters&#34;,&#34;flare.data.converters.Converters&#34;,&#34;flare.data.converters.DelimitedTextConverter&#34;,&#34;flare.data.converters.GraphMLConverter&#34;,&#34;flare.data.converters.IDataConverter&#34;,&#34;flare.data.converters.JSONConverter&#34;,&#34;flare.data.DataField&#34;,&#34;flare.data.DataSchema&#34;,&#34;flare.data.DataSet&#34;,&#34;flare.data.DataSource&#34;,&#34;flare.data.DataTable&#34;,&#34;flare.data.DataUtil&#34;,&#34;flare.display&#34;,&#34;flare.display.DirtySprite&#34;,&#34;flare.display.LineSprite&#34;,&#34;flare.display.RectSprite&#34;,&#34;flare.display.TextSprite&#34;,&#34;flare.flex&#34;,&#34;flare.flex.FlareVis&#34;,&#34;flare.physics&#34;,&#34;flare.physics.DragForce&#34;,&#34;flare.physics.GravityForce&#34;,&#34;flare.physics.IForce&#34;,&#34;flare.physics.NBodyForce&#34;,&#34;flare.physics.Particle&#34;,&#34;flare.physics.Simulation&#34;,&#34;flare.physics.Spring&#34;,&#34;flare.physics.SpringForce&#34;,&#34;flare.query&#34;,&#34;flare.query.AggregateExpression&#34;,&#34;flare.query.And&#34;,&#34;flare.query.Arithmetic&#34;,&#34;flare.query.Average&#34;,&#34;flare.query.BinaryExpression&#34;,&#34;flare.query.Comparison&#34;,&#34;flare.query.CompositeExpression&#34;,&#34;flare.query.Count&#34;,&#34;flare.query.DateUtil&#34;,&#34;flare.query.Distinct&#34;,&#34;flare.query.Expression&#34;,&#34;flare.query.ExpressionIterator&#34;,&#34;flare.query.Fn&#34;,&#34;flare.query.If&#34;,&#34;flare.query.IsA&#34;,&#34;flare.query.Literal&#34;,&#34;flare.query.Match&#34;,&#34;flare.query.Maximum&#34;,&#34;flare.query.methods&#34;,&#34;flare.query.methods.add&#34;,&#34;flare.query.methods.and&#34;,&#34;flare.query.methods.average&#34;,&#34;flare.query.methods.count&#34;,&#34;flare.query.methods.distinct&#34;,&#34;flare.query.methods.div&#34;,&#34;flare.query.methods.eq&#34;,&#34;flare.query.methods.fn&#34;,&#34;flare.query.methods.gt&#34;,&#34;flare.query.methods.gte&#34;,&#34;flare.query.methods.iff&#34;,&#34;flare.query.methods.isa&#34;,&#34;flare.query.methods.lt&#34;,&#34;flare.query.methods.lte&#34;,&#34;flare.query.methods.max&#34;,&#34;flare.query.methods.min&#34;,&#34;flare.query.methods.mod&#34;,&#34;flare.query.methods.mul&#34;,&#34;flare.query.methods.neq&#34;,&#34;flare.query.methods.not&#34;,&#34;flare.query.methods.or&#34;,&#34;flare.query.methods.orderby&#34;,&#34;flare.query.methods.range&#34;,&#34;flare.query.methods.select&#34;,&#34;flare.query.methods.stddev&#34;,&#34;flare.query.methods.sub&#34;,&#34;flare.query.methods.sum&#34;,&#34;flare.query.methods.update&#34;,&#34;flare.query.methods.variance&#34;,&#34;flare.query.methods.where&#34;,&#34;flare.query.methods.xor&#34;,&#34;flare.query.methods._&#34;,&#34;flare.query.Minimum&#34;,&#34;flare.query.Not&#34;,&#34;flare.query.Or&#34;,&#34;flare.query.Query&#34;,&#34;flare.query.Range&#34;,&#34;flare.query.StringUtil&#34;,&#34;flare.query.Sum&#34;,&#34;flare.query.Variable&#34;,&#34;flare.query.Variance&#34;,&#34;flare.query.Xor&#34;,&#34;flare.scale&#34;,&#34;flare.scale.IScaleMap&#34;,&#34;flare.scale.LinearScale&#34;,&#34;flare.scale.LogScale&#34;,&#34;flare.scale.OrdinalScale&#34;,&#34;flare.scale.QuantileScale&#34;,&#34;flare.scale.QuantitativeScale&#34;,&#34;flare.scale.RootScale&#34;,&#34;flare.scale.Scale&#34;,&#34;flare.scale.ScaleType&#34;,&#34;flare.scale.TimeScale&#34;,&#34;flare.util&#34;,&#34;flare.util.Arrays&#34;,&#34;flare.util.Colors&#34;,&#34;flare.util.Dates&#34;,&#34;flare.util.Displays&#34;,&#34;flare.util.Filter&#34;,&#34;flare.util.Geometry&#34;,&#34;flare.util.heap&#34;,&#34;flare.util.heap.FibonacciHeap&#34;,&#34;flare.util.heap.HeapNode&#34;,&#34;flare.util.IEvaluable&#34;,&#34;flare.util.IPredicate&#34;,&#34;flare.util.IValueProxy&#34;,&#34;flare.util.math&#34;,&#34;flare.util.math.DenseMatrix&#34;,&#34;flare.util.math.IMatrix&#34;,&#34;flare.util.math.SparseMatrix&#34;,&#34;flare.util.Maths&#34;,&#34;flare.util.Orientation&#34;,&#34;flare.util.palette&#34;,&#34;flare.util.palette.ColorPalette&#34;,&#34;flare.util.palette.Palette&#34;,&#34;flare.util.palette.ShapePalette&#34;,&#34;flare.util.palette.SizePalette&#34;,&#34;flare.util.Property&#34;,&#34;flare.util.Shapes&#34;,&#34;flare.util.Sort&#34;,&#34;flare.util.Stats&#34;,&#34;flare.util.Strings&#34;,&#34;flare.vis&#34;,&#34;flare.vis.axis&#34;,&#34;flare.vis.axis.Axes&#34;,&#34;flare.vis.axis.Axis&#34;,&#34;flare.vis.axis.AxisGridLine&#34;,&#34;flare.vis.axis.AxisLabel&#34;,&#34;flare.vis.axis.CartesianAxes&#34;,&#34;flare.vis.controls&#34;,&#34;flare.vis.controls.AnchorControl&#34;,&#34;flare.vis.controls.ClickControl&#34;,&#34;flare.vis.controls.Control&#34;,&#34;flare.vis.controls.ControlList&#34;,&#34;flare.vis.controls.DragControl&#34;,&#34;flare.vis.controls.ExpandControl&#34;,&#34;flare.vis.controls.HoverControl&#34;,&#34;flare.vis.controls.IControl&#34;,&#34;flare.vis.controls.PanZoomControl&#34;,&#34;flare.vis.controls.SelectionControl&#34;,&#34;flare.vis.controls.TooltipControl&#34;,&#34;flare.vis.data&#34;,&#34;flare.vis.data.Data&#34;,&#34;flare.vis.data.DataList&#34;,&#34;flare.vis.data.DataSprite&#34;,&#34;flare.vis.data.EdgeSprite&#34;,&#34;flare.vis.data.NodeSprite&#34;,&#34;flare.vis.data.render&#34;,&#34;flare.vis.data.render.ArrowType&#34;,&#34;flare.vis.data.render.EdgeRenderer&#34;,&#34;flare.vis.data.render.IRenderer&#34;,&#34;flare.vis.data.render.ShapeRenderer&#34;,&#34;flare.vis.data.ScaleBinding&#34;,&#34;flare.vis.data.Tree&#34;,&#34;flare.vis.data.TreeBuilder&#34;,&#34;flare.vis.events&#34;,&#34;flare.vis.events.DataEvent&#34;,&#34;flare.vis.events.SelectionEvent&#34;,&#34;flare.vis.events.TooltipEvent&#34;,&#34;flare.vis.events.VisualizationEvent&#34;,&#34;flare.vis.legend&#34;,&#34;flare.vis.legend.Legend&#34;,&#34;flare.vis.legend.LegendItem&#34;,&#34;flare.vis.legend.LegendRange&#34;,&#34;flare.vis.operator&#34;,&#34;flare.vis.operator.distortion&#34;,&#34;flare.vis.operator.distortion.BifocalDistortion&#34;,&#34;flare.vis.operator.distortion.Distortion&#34;,&#34;flare.vis.operator.distortion.FisheyeDistortion&#34;,&#34;flare.vis.operator.encoder&#34;,&#34;flare.vis.operator.encoder.ColorEncoder&#34;,&#34;flare.vis.operator.encoder.Encoder&#34;,&#34;flare.vis.operator.encoder.PropertyEncoder&#34;,&#34;flare.vis.operator.encoder.ShapeEncoder&#34;,&#34;flare.vis.operator.encoder.SizeEncoder&#34;,&#34;flare.vis.operator.filter&#34;,&#34;flare.vis.operator.filter.FisheyeTreeFilter&#34;,&#34;flare.vis.operator.filter.GraphDistanceFilter&#34;,&#34;flare.vis.operator.filter.VisibilityFilter&#34;,&#34;flare.vis.operator.IOperator&#34;,&#34;flare.vis.operator.label&#34;,&#34;flare.vis.operator.label.Labeler&#34;,&#34;flare.vis.operator.label.RadialLabeler&#34;,&#34;flare.vis.operator.label.StackedAreaLabeler&#34;,&#34;flare.vis.operator.layout&#34;,&#34;flare.vis.operator.layout.AxisLayout&#34;,&#34;flare.vis.operator.layout.BundledEdgeRouter&#34;,&#34;flare.vis.operator.layout.CircleLayout&#34;,&#34;flare.vis.operator.layout.CirclePackingLayout&#34;,&#34;flare.vis.operator.layout.DendrogramLayout&#34;,&#34;flare.vis.operator.layout.ForceDirectedLayout&#34;,&#34;flare.vis.operator.layout.IcicleTreeLayout&#34;,&#34;flare.vis.operator.layout.IndentedTreeLayout&#34;,&#34;flare.vis.operator.layout.Layout&#34;,&#34;flare.vis.operator.layout.NodeLinkTreeLayout&#34;,&#34;flare.vis.operator.layout.PieLayout&#34;,&#34;flare.vis.operator.layout.RadialTreeLayout&#34;,&#34;flare.vis.operator.layout.RandomLayout&#34;,&#34;flare.vis.operator.layout.StackedAreaLayout&#34;,&#34;flare.vis.operator.layout.TreeMapLayout&#34;,&#34;flare.vis.operator.Operator&#34;,&#34;flare.vis.operator.OperatorList&#34;,&#34;flare.vis.operator.OperatorSequence&#34;,&#34;flare.vis.operator.OperatorSwitch&#34;,&#34;flare.vis.operator.SortOperator&#34;,&#34;flare.vis.Visualization&#34;],&#34;value&#34;:[null,null,null,3938,3812,6714,743,null,3534,5731,7840,5914,3416,null,7074,null,17010,5842,null,1983,2047,1375,8746,2202,1382,1629,1675,2042,1041,5176,449,5593,5534,9201,19975,1116,6006,null,null,721,4294,9800,1314,2220,1759,2165,586,3331,772,3322,null,8833,1732,3623,10066,null,4116,null,1082,1336,319,10498,2822,9983,2213,1681,null,1616,1027,3891,891,2893,5103,3677,781,4141,933,5130,3617,3240,2732,2039,1214,3748,843,null,593,330,287,277,292,595,594,460,603,625,748,461,597,619,283,283,591,603,599,386,323,307,772,296,363,600,280,307,335,299,354,264,843,1554,970,13896,1594,4130,791,1124,1876,1101,null,2105,1316,3151,3770,2435,4839,1756,4268,1821,5833,null,8258,10001,8217,12555,2324,10993,null,9354,1233,335,383,874,null,3165,2815,3366,17705,1486,null,6367,1229,2059,2291,5559,19118,6887,6557,22026,null,null,1302,24593,652,636,6703,null,2138,3824,1353,4665,2649,2832,4896,763,5222,7862,8435,null,20544,19788,10349,3301,19382,null,698,5569,353,2247,11275,7147,9930,null,2313,1880,1701,1117,null,20859,4614,10530,null,null,4461,6314,3444,null,3179,4060,4138,1690,1830,null,5219,3165,3509,1286,null,9956,3899,3202,null,6725,3727,9317,12003,4853,8411,4864,3174,7881,12870,2728,12348,870,9121,9191,2490,5248,4190,2581,2023,16540]},&#34;type&#34;:&#34;data.frame&#34;,&#34;container&#34;:&#34;svg&#34;,&#34;options&#34;:null,&#34;script&#34;:&#34;var d3Script = function(d3, r2d3, data, svg, width, height, options, theme, console) {\nthis.d3 = d3;\n\nsvg = d3.select(svg.node());\n/* R2D3 Source File:  bubbles.js */\n// !preview r2d3 data = read.csv(\&#34;flare.csv\&#34;), d3_version = 4\n\n// Based on https://bl.ocks.org/mbostock/4063269\n\n// Initialization\nsvg.attr(\&#34;font-family\&#34;, \&#34;sans-serif\&#34;)\n  .attr(\&#34;font-size\&#34;, \&#34;8\&#34;)\n  .attr(\&#34;text-anchor\&#34;, \&#34;middle\&#34;)\n  .attr(\&#34;id\&#34;,\&#34;myoutput\&#34;);\nvar svgSize = 600;\nvar pack = d3.pack()\n  .size([svgSize, svgSize])\n  .padding(1.5);\n\nvar format = d3.format(\&#34;,d\&#34;);\nvar color = d3.scaleOrdinal(d3.schemeCategory20c);\n\nvar group = svg.append(\&#34;g\&#34;);\n\n// Resize\nr2d3.onResize(function(width, height) {\n  var minSize = Math.min(width, height);\n  var scale = minSize / svgSize;\n\n  group.attr(\&#34;transform\&#34;, function(d) {\n    return \&#34;\&#34; +\n      \&#34;translate(\&#34; + (width - minSize) / 2 + \&#34;,\&#34; + (height - minSize) / 2 + \&#34;),\&#34; +\n      \&#34;scale(\&#34; + scale + \&#34;,\&#34; + scale + \&#34;)\&#34;;\n  });\n});\n\n// Rendering\nr2d3.onRender(function(data, svg, width, height, options) {\n  var root = d3.hierarchy({children: data})\n    .sum(function(d) { return d.value; })\n    .each(function(d) {\n      if (id = d.data.id) {\n        var id, i = id.lastIndexOf(\&#34;.\&#34;);\n        d.id = id;\n        d.package = id.slice(0, i);\n        d.class = id.slice(i + 1);\n      }\n    });\n\n  var node = group.selectAll(\&#34;.node\&#34;)\n    .data(pack(root).leaves())\n    .enter().append(\&#34;g\&#34;)\n      .attr(\&#34;class\&#34;, \&#34;node\&#34;)\n      .attr(\&#34;transform\&#34;, function(d) { return \&#34;translate(\&#34; + d.x + \&#34;,\&#34; + d.y + \&#34;)\&#34;; });\n\n  node.append(\&#34;circle\&#34;)\n      .attr(\&#34;id\&#34;, function(d) { return d.id; })\n      .attr(\&#34;r\&#34;, function(d) { return d.r; })\n      .style(\&#34;fill\&#34;, function(d) { return color(d.package); });\n\n  node.append(\&#34;clipPath\&#34;)\n      .attr(\&#34;id\&#34;, function(d) { return \&#34;clip-\&#34; + d.id; })\n    .append(\&#34;use\&#34;)\n      .attr(\&#34;xlink:href\&#34;, function(d) { return \&#34;#\&#34; + d.id; });\n\n  node.append(\&#34;text\&#34;)\n      .attr(\&#34;clip-path\&#34;, function(d) { return \&#34;url(#clip-\&#34; + d.id + \&#34;)\&#34;; })\n    .selectAll(\&#34;tspan\&#34;)\n    .data(function(d) { return d.class.split(/(?=[A-Z][^A-Z])/g); })\n    .enter().append(\&#34;tspan\&#34;)\n      .attr(\&#34;x\&#34;, 0)\n      .attr(\&#34;y\&#34;, function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })\n      .text(function(d) { return d; });\n\n  node.append(\&#34;title\&#34;)\n      .text(function(d) { return d.id + \&#34;\\n\&#34; + format(d.value); });\n\n  r2d3.resize(width, height);\n});\n};&#34;,&#34;style&#34;:null,&#34;version&#34;:4,&#34;theme&#34;:{&#34;default&#34;:{&#34;background&#34;:&#34;#FFFFFF&#34;,&#34;foreground&#34;:&#34;#000000&#34;},&#34;runtime&#34;:null},&#34;useShadow&#34;:true},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>exampleproject</title>
      <link>/project/exampleproject/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/exampleproject/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(mtcars,aes(x = mpg,y=cyl))+geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2019-02-19-exampleproject_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>post3</title>
      <link>/post/post3/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/post3/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(mtcars,aes(x = mpg,y=cyl))+geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Practicle1</title>
      <link>/post/p1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/p1/</guid>
      <description>


&lt;p&gt;1.A 48.99335 54.12365 38 66 48.10512 55.11201&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/p1_files/figure-html/eruptions-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/p1_files/figure-html/eruptions-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Range of pre: 0 ~ 4860.879
Range of post: 0 ~ 12783.97&lt;/p&gt;
&lt;div id=&#34;confidence-interval&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Confidence interval&lt;/h2&gt;
&lt;div id=&#34;normal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Normal&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pre &amp;lt;- subset(data, impact == 0)
post &amp;lt;- subset(data, impact == 1)
mean(pre$ab) + 1.96 * (sd(pre$ab) / sqrt(15129))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 55.03908&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(pre$ab) - 1.96 * (sd(pre$ab) / sqrt(15129))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 48.07792&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(post$ab) + 1.96 * (sd(post$ab) / sqrt(12725))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 82.5884&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(post$ab) - 1.96 * (sd(post$ab) / sqrt(12725))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 68.19987&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;poisson&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;poisson&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(pre$ab)+1.96*sqrt(mean(pre$ab)/(15129))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 51.67292&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(pre$ab)-1.96*sqrt(mean(pre$ab)/(15129))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 51.44408&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(post$ab)+1.96*sqrt(mean(post$ab)/(12725))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 75.545&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(post$ab)-1.96*sqrt(mean(post$ab)/(12725))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 75.24327&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;boostrap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;boostrap&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results &amp;lt;- matrix(0, nrow = 1000, ncol = 1)
for (j in 1:1000) {
  rowsToUse &amp;lt;- sort(sample(which(data$impact == 0),
                           length(which(data$impact == 0)), replace = T))
  results[j, ] &amp;lt;- mean(data$Nhat[rowsToUse] / data$area[rowsToUse])
}
quantile(results, probs = c(0.025, 0.975))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     2.5%    97.5% 
## 48.13734 55.10578&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results &amp;lt;- matrix(0, nrow = 1000, ncol = 1)
for (j in 1:1000) {
  rowsToUse &amp;lt;- sort(sample(which(data$impact == 1),
                           length(which(data$impact == 1)), replace = T))
  results[j, ] &amp;lt;- mean(data$Nhat[rowsToUse] / data$area[rowsToUse])
}
quantile(results, probs = c(0.025, 0.975))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     2.5%    97.5% 
## 68.40201 82.33514&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Notebook</title>
      <link>/playground/p2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/playground/p2/</guid>
      <description>&lt;p&gt;This is an &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; target=&#34;_blank&#34;&gt;R Markdown&lt;/a&gt; Notebook. When you execute code within the notebook, the results appear beneath the code.&lt;/p&gt;

&lt;p&gt;Try executing this chunk by clicking the &lt;em&gt;Run&lt;/em&gt; button within the chunk or by placing your cursor inside it and pressing &lt;em&gt;Ctrl+Shift+Enter&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a new chunk by clicking the &lt;em&gt;Insert Chunk&lt;/em&gt; button on the toolbar or by pressing &lt;em&gt;Ctrl+Alt+I&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the &lt;em&gt;Preview&lt;/em&gt; button or press &lt;em&gt;Ctrl+Shift+K&lt;/em&gt; to preview the HTML file).&lt;/p&gt;

&lt;p&gt;The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike &lt;em&gt;Knit&lt;/em&gt;, &lt;em&gt;Preview&lt;/em&gt; does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R Notebook</title>
      <link>/project/p2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/p2/</guid>
      <description>&lt;p&gt;This is an &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; target=&#34;_blank&#34;&gt;R Markdown&lt;/a&gt; Notebook. When you execute code within the notebook, the results appear beneath the code.&lt;/p&gt;

&lt;p&gt;Try executing this chunk by clicking the &lt;em&gt;Run&lt;/em&gt; button within the chunk or by placing your cursor inside it and pressing &lt;em&gt;Ctrl+Shift+Enter&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a new chunk by clicking the &lt;em&gt;Insert Chunk&lt;/em&gt; button on the toolbar or by pressing &lt;em&gt;Ctrl+Alt+I&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the &lt;em&gt;Preview&lt;/em&gt; button or press &lt;em&gt;Ctrl+Shift+K&lt;/em&gt; to preview the HTML file).&lt;/p&gt;

&lt;p&gt;The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike &lt;em&gt;Knit&lt;/em&gt;, &lt;em&gt;Preview&lt;/em&gt; does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R Notebook underpost</title>
      <link>/post/article/p2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/article/p2/</guid>
      <description>&lt;p&gt;This is an &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; target=&#34;_blank&#34;&gt;R Markdown&lt;/a&gt; Notebook. When you execute code within the notebook, the results appear beneath the code.&lt;/p&gt;

&lt;p&gt;Try executing this chunk by clicking the &lt;em&gt;Run&lt;/em&gt; button within the chunk or by placing your cursor inside it and pressing &lt;em&gt;Ctrl+Shift+Enter&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a new chunk by clicking the &lt;em&gt;Insert Chunk&lt;/em&gt; button on the toolbar or by pressing &lt;em&gt;Ctrl+Alt+I&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the &lt;em&gt;Preview&lt;/em&gt; button or press &lt;em&gt;Ctrl+Shift+K&lt;/em&gt; to preview the HTML file).&lt;/p&gt;

&lt;p&gt;The preview shows you a rendered HTML copy of the contents of the editor. Consequently, unlike &lt;em&gt;Knit&lt;/em&gt;, &lt;em&gt;Preview&lt;/em&gt; does not run any R code chunks. Instead, the output of the chunk when it was last run in the editor is displayed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>newpost2</title>
      <link>/practice/newpost2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/practice/newpost2/</guid>
      <description>&lt;p&gt;library(ggplot2)
    ggplot(mtcars,aes(x = mpg,y=cyl))+geom_point()&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;index_files/figure-markdown_strict/unnamed-chunk-1-1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>practicle1</title>
      <link>/post/practicle1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/practicle1/</guid>
      <description>

&lt;p&gt;1.A 48.99335 54.12365 38 66 48.10512 55.11201&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;p1_files/figure-markdown_strict/eruptions-1.png&#34; alt=&#34;&#34; /&gt;&lt;img src=&#34;p1_files/figure-markdown_strict/eruptions-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Range of pre: 0 ~ 4860.879 Range of post: 0 ~ 12783.97&lt;/p&gt;

&lt;h2 id=&#34;confidence-interval&#34;&gt;Confidence interval&lt;/h2&gt;

&lt;h3 id=&#34;normal&#34;&gt;Normal&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pre &amp;lt;- subset(data, impact == 0)
post &amp;lt;- subset(data, impact == 1)
mean(pre$ab) + 1.96 * (sd(pre$ab) / sqrt(15129))

## [1] 55.03908

mean(pre$ab) - 1.96 * (sd(pre$ab) / sqrt(15129))

## [1] 48.07792

mean(post$ab) + 1.96 * (sd(post$ab) / sqrt(12725))

## [1] 82.5884

mean(post$ab) - 1.96 * (sd(post$ab) / sqrt(12725))

## [1] 68.19987
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;poisson&#34;&gt;poisson&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mean(pre$ab)+1.96*sqrt(mean(pre$ab)/(15129))

## [1] 51.67292

mean(pre$ab)-1.96*sqrt(mean(pre$ab)/(15129))

## [1] 51.44408

mean(post$ab)+1.96*sqrt(mean(post$ab)/(12725))

## [1] 75.545

mean(post$ab)-1.96*sqrt(mean(post$ab)/(12725))

## [1] 75.24327
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;boostrap&#34;&gt;boostrap&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;results &amp;lt;- matrix(0, nrow = 1000, ncol = 1)
for (j in 1:1000) {
  rowsToUse &amp;lt;- sort(sample(which(data$impact == 0),
                           length(which(data$impact == 0)), replace = T))
  results[j, ] &amp;lt;- mean(data$Nhat[rowsToUse] / data$area[rowsToUse])
}
quantile(results, probs = c(0.025, 0.975))

##     2.5%    97.5% 
## 48.04799 54.91988

results &amp;lt;- matrix(0, nrow = 1000, ncol = 1)
for (j in 1:1000) {
  rowsToUse &amp;lt;- sort(sample(which(data$impact == 1),
                           length(which(data$impact == 1)), replace = T))
  results[j, ] &amp;lt;- mean(data$Nhat[rowsToUse] / data$area[rowsToUse])
}
quantile(results, probs = c(0.025, 0.975))

##     2.5%    97.5% 
## 68.34301 82.24251
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>practicle2</title>
      <link>/post/practicle2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/practicle2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;./normal-1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;##   impact    x.pos    y.pos    Depth 
## 1.002286 1.699226 1.330190 1.391844
##       impact        x.pos        y.pos        Depth impact:x.pos 
## 5.015303e+05 3.303200e+00 2.877470e+00 1.420266e+00 1.342261e+03 
## impact:y.pos 
## 4.758675e+05

## Waiting for profiling to be done...
##   (Intercept)       impact1         x.pos         y.pos         Depth 
##             1             1             0             1             0 
## impact1:x.pos impact1:y.pos 
##             0             0

##   (Intercept)       impact1         x.pos         y.pos         Depth 
##             1             0             1             1             1 
## impact1:x.pos impact1:y.pos 
##             1             0

## [1] 0.007878557
##   (Intercept)       impact1         x.pos         y.pos         Depth 
##             1             1             1             1             1 
## impact1:x.pos impact1:y.pos 
##             1             0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;./normal-1.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
